generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int          @id @default(autoincrement())
  name               String?
  email              String       @unique
  password           String
  role               String?
  isActive           Boolean      @default(true)
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  balance            Decimal      @default(0.000000000000000000000000000000)
  stars              Decimal      @default(0.000000000000000000000000000000)
  lastLoginTime      DateTime?    @db.DateTime(0)
  lastLoginIpAddress String?      @db.VarChar(50)
  listingCount       Int?
  dailyBonus         DailyBonus[]
  Post               Post[]
}

model DailyBonus {
  id     Int      @id @default(autoincrement())
  userId Int
  bonus  Int      @default(20)
  date   DateTime @default(now())
  user   User     @relation(fields: [userId], references: [id])

  @@unique([userId, date])
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  published Boolean  @default(false)
  authorId  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [authorId], references: [id])

  @@index([authorId], map: "Post_authorId_fkey")
}

model VehicleBrand {
  id           Int            @id @default(autoincrement())
  name         String         @unique(map: "CarBrand_name_key") @db.VarChar(255)
  country      String?        @db.VarChar(255)
  logo         String?        @db.VarChar(255)
  established  DateTime?
  rank         Int?
  VehicleModel VehicleModel[]
}

model VehicleModel {
  id           Int          @id @default(autoincrement())
  name         String
  brandId      Int
  years        String?
  isVisible    String?
  information  String?
  VehicleBrand VehicleBrand @relation(fields: [brandId], references: [id], map: "CarModel_brandId_fkey")

  @@index([brandId], map: "CarModel_brandId_fkey")
}
